imports:
    - { resource: 'vendor/symplify/easy-coding-standard/config/psr2.yml' }
    - { resource: 'vendor/symplify/easy-coding-standard/config/php71.yml' }
    - { resource: 'vendor/symplify/easy-coding-standard/config/clean-code.yml' }
    - { resource: 'vendor/symplify/easy-coding-standard/config/common.yml' }

services:
    # spacing
    PhpCsFixer\Fixer\PhpTag\BlankLineAfterOpeningTagFixer: ~
    PhpCsFixer\Fixer\Whitespace\BlankLineBeforeStatementFixer: ~
    PhpCsFixer\Fixer\CastNotation\CastSpacesFixer: ~
    PhpCsFixer\Fixer\Operator\ConcatSpaceFixer:
        spacing: none
    PhpCsFixer\Fixer\ClassNotation\MethodSeparationFixer: ~
    PhpCsFixer\Fixer\ClassNotation\NoBlankLinesAfterClassOpeningFixer: ~
    PhpCsFixer\Fixer\Whitespace\NoSpacesAroundOffsetFixer:
        positions: ['inside', 'outside']
    PhpCsFixer\Fixer\Operator\BinaryOperatorSpacesFixer:
        align_double_arrow: false
        align_equals: false

    # phpdoc
    PhpCsFixer\Fixer\Phpdoc\PhpdocSeparationFixer: ~
    PhpCsFixer\Fixer\Phpdoc\PhpdocAlignFixer: ~

    # Symplify
    Symplify\CodingStandard\Fixer\Import\ImportNamespacedNameFixer: ~
    Symplify\CodingStandard\Fixer\Php\ClassStringToClassConstantFixer: ~
    Symplify\CodingStandard\Fixer\Property\ArrayPropertyDefaultValueFixer: ~
    Symplify\CodingStandard\Fixer\ArrayNotation\StandaloneLineInMultilineArrayFixer: ~

parameters:
    skip:

        # missing typehints
        SlevomatCodingStandard\Sniffs\TypeHints\TypeHintDeclarationSniff.MissingParameterTypeHint: ~
        SlevomatCodingStandard\Sniffs\TypeHints\TypeHintDeclarationSniff.MissingTraversableParameterTypeHintSpecification: ~
        SlevomatCodingStandard\Sniffs\TypeHints\TypeHintDeclarationSniff.MissingReturnTypeHint: ~
        SlevomatCodingStandard\Sniffs\TypeHints\TypeHintDeclarationSniff.MissingTraversableReturnTypeHintSpecification: ~
        SlevomatCodingStandard\Sniffs\TypeHints\TypeHintDeclarationSniff.MissingPropertyTypeHint: ~
        SlevomatCodingStandard\Sniffs\TypeHints\TypeHintDeclarationSniff.MissingTraversablePropertyTypeHintSpecification: ~

        # assignment in "while ($var = ...)" are ok
        PHP_CodeSniffer\Standards\Generic\Sniffs\CodeAnalysis\AssignmentInConditionSniff.FoundInWhileCondition:
